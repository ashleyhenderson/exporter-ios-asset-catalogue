{* Get current exported brand. Asset exporters only work in brand-specific mode *}
{[ let brand = ds.currentBrand() /]}
{[ let groups = ds.tokenGroupsOfType("Color", brand.id) /]}

{* Note: In here, we are using actual asset object. In the asset_path blueprint, we are using RenderedAsset object, which is bit different in its structure. }

{* Generate jsons for each asset that is available *}
{[ for group in groups ]}
    {[ const tokens = ds.tokensByGroupId(group.id) /]}
    {[ for token in tokens ]}
        {* Generate path from segments. Path remains the same *}
        {[ let path = (group.path.append(group.name).append((token.name + ".colorset")).join("/")) /]}

        {* Emit JSON file for each of the assets. 
           The file contains the payload needed to define basic information inside XCode catalogue entry. 
           Please note that by default, everything preserves vector representation, which is a preferred choice for this usecase
        *}
        {[ emit file ("Assets.xcassets/" + path + "/" + "Contents.json") ]}
{
  "colors" : [
    {
      "color" : {
        "color-space" : "srgb",
        "components" : {
          "alpha" : "{{token.value}}",
          "blue" : "0x64",
          "green" : "0x46",
          "red" : "0x00"
        }
      },
      "idiom" : "universal"
    },
    {
      "appearances" : [
        {
          "appearance" : "luminosity",
          "value" : "dark"
        }
      ],
      "color" : {
        "color-space" : "srgb",
        "components" : {
          "alpha" : "1.000",
          "blue" : "0xFF",
          "green" : "0xFF",
          "red" : "0xFF"
        }
      },
      "idiom" : "universal"
    }
  ],
  "info" : {
    "author" : "xcode",
    "version" : 1
  }
}

        {[/]}
    {[/]}
{[/]}

